// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String 
  refresh_token      String? @db.String
  access_token       String? @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.String
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}

model User {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  accounts      Account[]
}

model Admin {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  email         String  @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Setting {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  values String[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Product {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String
  price Float
  images String[]
  categoryId String? @db.ObjectId
  category Category? @relation(fields: [categoryId], references: [id])

  properties Json?
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Order {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  line_items Json
  name String
  email String
  city String
  postalCode String
  streetAddress String
  country String
  paid Boolean

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Category {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name String
  parent Category? @relation("Child", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  parentId String? @db.ObjectId
  child Category[] @relation("Child")
  properties    Property[]

  product Product[]
  

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Property {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  values        String[]
  
  category      Category?    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId    String      @db.ObjectId


  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}